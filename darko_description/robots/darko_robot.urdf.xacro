<?xml version="1.0"?>

<!-- This config is based upon: summit_xl_description/robots/summit_xls_std.urdf -->
<robot name="summit_xl" xmlns:xacro="http://wiki.ros.org/xacro">

    <!-- ***************** -->
    <!-- Imported elements -->
    <!-- ***************** -->

    <!-- First we import all possible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->

    <!-- Import summit XL base elements -->
    <!--<xacro:include filename="$(find summit_xl_description)/urdf/bases/summit_xls_base.urdf.xacro" />-->
    <xacro:include filename="$(find summit_xl_description)/urdf/bases/summit_xlsk_base_oem.urdf.xacro" />

    <!-- Import summit XL wheels -->
    <xacro:include filename="$(find summit_xl_description)/urdf/wheels/omni_wheel.urdf.xacro" />
    <xacro:include filename="$(find summit_xl_description)/urdf/wheels/rubber_wheel.urdf.xacro" />
    <xacro:include filename="$(find summit_xl_description)/urdf/structures/structure_hokuyo.urdf.xacro" />
    <xacro:include filename="$(find summit_xl_description)/urdf/structures/sick_microscan3_support.urdf.xacro" />

    <!-- Import all available sensors -->
    <xacro:include filename="$(find robotnik_sensors)/urdf/all_sensors.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/sensor_kinect4a.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/sensor_basler_ace.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/sensor_ouster0.urdf.xacro" />
    
    <!-- Import DARKO mounting structure and other items -->
    <!-- NOTE: For models exported from Blender to show up in Gazebo, you need to remove all "transparent" tags from the DAE file -->
    <xacro:include filename="$(find darko_description)/urdf/mounting_platform.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/lidar_tower.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/panda_controller.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/panda_arm.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/nao_robot.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/projector.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/wireless_estop_receiver.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/mini_gaming_pc.urdf.xacro" />
    <xacro:include filename="$(find darko_description)/urdf/xavier_agx_dk.urdf.xacro" />


    <xacro:property name="PI" value="3.1415926535897931"/>

    <!-- Wheel parameters -->
    <!-- x,y,z in translation from base_link to the center of the wheel -->
    <xacro:property name="wheel_offset_x" value="0.2225" />
    <xacro:property name="wheel_offset_y" value="0.2675" />
    <xacro:property name="wheel_offset_z" value="0.0" />

    <xacro:property name="front_laser_offset_x" value="0.2865"/>
    <xacro:property name="front_laser_offset_y" value="-0.20894"/>
    <xacro:property name="front_laser_offset_z" value="0.2973"/>

    <xacro:property name="rear_laser_offset_x" value="-0.2865"/>
    <xacro:property name="rear_laser_offset_y" value="0.20894"/>
    <xacro:property name="rear_laser_offset_z" value="0.2973"/>

    <!-- TODO: Likely obsolete -->
    <xacro:property name="front_ptz_camera_offset_x" value="0.308"/>
    <xacro:property name="front_ptz_camera_offset_y" value="0.141"/>
    <xacro:property name="front_ptz_camera_offset_z" value="0.195"/>

    <!-- TODO: Likely obsolete -->
    <xacro:property name="rear_ptz_camera_offset_x" value="-0.308"/>
    <xacro:property name="rear_ptz_camera_offset_y" value="-0.141"/>
    <xacro:property name="rear_ptz_camera_offset_z" value="0.195"/>

    <xacro:property name="imu_offset_x" value="0.127"/>
    <xacro:property name="imu_offset_y" value="-0.129"/>
    <xacro:property name="imu_offset_z" value="0.212"/>

    <xacro:property name="front_rgbd_camera_offset_x" value="0.35850"/>
    <xacro:property name="front_rgbd_camera_offset_y" value="0.0"/>
    <xacro:property name="front_rgbd_camera_offset_z" value="0.25062"/>

    <!-- TODO: Likely not needed -->
    <xacro:property name="gps_offset_x" value="-0.365"/>
    <xacro:property name="gps_offset_y" value="-0.167"/>
    <xacro:property name="gps_offset_z" value="0.302"/>

    <!-- Flag to select the high or low quality model -->
    <xacro:property name="hq" value="true" />

    <xacro:arg name="prefix" default="darko/"/>
    <xacro:arg name="ros_planar_move_plugin" default="false"/>
    <xacro:arg name="enable_arm" default="true"/>
    <xacro:arg name="gpu" default="false"/>


    <xacro:macro name="summit_xl" params="prefix publish_bf hq">

        <!-- *************** -->
        <!-- Robots Elements -->
        <!-- *************** -->

        <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->

        <!-- Summit XL base -->
        <xacro:summit_xls_base prefix="$(arg prefix)" publish_bf="true" hq="${hq}" />

        <xacro:omni_wheel prefix="$(arg prefix)front_right" parent="$(arg prefix)base_link" reflect="false" hq="${hq}">
            <origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
        </xacro:omni_wheel>

        <xacro:omni_wheel prefix="$(arg prefix)front_left" parent="$(arg prefix)base_link" reflect="true" hq="${hq}">
            <origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
        </xacro:omni_wheel>

        <xacro:omni_wheel prefix="$(arg prefix)back_left" parent="$(arg prefix)base_link" reflect="true" hq="${hq}">
            <origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
        </xacro:omni_wheel>

        <xacro:omni_wheel prefix="$(arg prefix)back_right" parent="$(arg prefix)base_link" reflect="false" hq="${hq}">
            <origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
        </xacro:omni_wheel>

        <!-- IMU -->
        <xacro:sensor_imu prefix="$(arg prefix)imu" parent="$(arg prefix)base_link">
            <origin xyz="${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0"/>
        </xacro:sensor_imu>

        <!-- MOUNTING STRUCTURES -->

        <!-- Mounting Platform, Bottom Level (0): attach to robot's base link -->
        <joint name="$(arg prefix)platform_0_joint" type="fixed">
            <origin xyz="0 0 0.38" rpy="0 0 0" />
            <parent link="$(arg prefix)base_link"/>
            <child link="$(arg prefix)platform_0_link" />
        </joint>
        <link name="$(arg prefix)platform_0_link"/>

        <!-- Mounting Platform, Middle Level (1): attach to level 0 -->
        <xacro:darko_mounting_platform prefix="$(arg prefix)platform_1" parent="$(arg prefix)platform_0_link">
            <origin xyz="0 0 0.0" rpy="0 0 0" />
        </xacro:darko_mounting_platform>

        <!-- Mounting Platform, Top Level (2): attach to level 1 -->
        <xacro:darko_mounting_platform prefix="$(arg prefix)platform_2" parent="$(arg prefix)platform_1_link">
            <origin xyz="0 0 0.19" rpy="0 0 0" />
        </xacro:darko_mounting_platform>

        <!-- SENSORS -->
        <xacro:sensor_hokuyo_ust10lx prefix="$(arg prefix)front_laser" parent="$(arg prefix)base_link" prefix_topic="front_laser" gpu="$(arg gpu)">
            <origin xyz="${front_laser_offset_x} ${front_laser_offset_y} ${front_laser_offset_z-0.06}" rpy="0 ${-PI} ${3/4*PI}" />
        </xacro:sensor_hokuyo_ust10lx>
        <!--
        <xacro:sensor_sick_s300 prefix="$(arg prefix)rear_laser" parent="$(arg prefix)base_link" prefix_topic="rear_laser" gpu="$(arg gpu)">
            <origin xyz="${rear_laser_offset_x} ${rear_laser_offset_y} ${rear_laser_offset_z}" rpy="0 ${-PI} ${-1/4*PI}" />
        </xacro:sensor_sick_s300>
        -->

        <xacro:sick_microscan3_support prefix="$(arg prefix)rear_laser" parent="$(arg prefix)base_link">
            <origin xyz="${rear_laser_offset_x} ${rear_laser_offset_y} ${rear_laser_offset_z-0.095}" rpy="0 0 ${3/4*PI}" />
        </xacro:sick_microscan3_support>
         <xacro:sensor_sick_microscan3 prefix="$(arg prefix)rear_laser" parent="$(arg prefix)rear_laser_support_link" prefix_topic="rear_laser" gpu="$(arg gpu)">
            <origin xyz="0.16 0 -0.04" rpy="${PI} 0 0" />
        </xacro:sensor_sick_microscan3>

        <!-- Ouster lidar: attach above top platform -->
        <xacro:sensor_ouster0 prefix="$(arg prefix)ouster" parent="$(arg prefix)platform_2_link" prefix_topic="ouster" gpu="$(arg gpu)" range_min="0.25" range_max="120.0" hfov="360.0" hsamples="512" vfov="90.0" vsamples="128" fps="1">
            <origin xyz="0.33 -0.27 0.515" rpy="0 0 0" />
        </xacro:sensor_ouster0>
        
        <!-- Lidar tower: attach below lidar sensor -->
        <xacro:darko_lidar_tower prefix="$(arg prefix)lidar_tower" parent="$(arg prefix)ouster_base_link">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:darko_lidar_tower>

        <!-- Basler color cameras with fisheye lens, part of omni-cam: attach below lidar -->
        <xacro:sensor_basler_ace prefix="$(arg prefix)front_basler_cam" parent="$(arg prefix)ouster_base_link" prefix_topic="front_basler_cam">
            <origin xyz="0.03 0.035 -0.1" rpy="0 0 0"/>
        </xacro:sensor_basler_ace>
        <xacro:sensor_basler_ace prefix="$(arg prefix)rear_basler_cam" parent="$(arg prefix)ouster_base_link" prefix_topic="rear_basler_cam">
            <origin xyz="-0.03 -0.035 -0.1" rpy="0 0 ${PI}"/>
        </xacro:sensor_basler_ace>

        <!-- Kinect for Azure looking forward in main driving direction (NFOV mode) -->
        <xacro:sensor_kinect4a prefix="$(arg prefix)front_kinect4a" parent="$(arg prefix)platform_2_link" prefix_topic="front_kinect4a" wfov="false">
            <origin xyz="0.314 0 -0.064" rpy="0 0 0"/>
        </xacro:sensor_kinect4a>

        <!-- RGB-D tower on shelf-facing corner -->
        <xacro:darko_lidar_tower prefix="$(arg prefix)rgbd_tower" parent="$(arg prefix)platform_2_link">
            <origin xyz="0.33 0.27 0.515" rpy="0 0 0" />
        </xacro:darko_lidar_tower>

        <!-- Kinect for Azure looking sideways, upper sensor (WFOV mode) -->
        <xacro:sensor_kinect4a prefix="$(arg prefix)side_upper_kinect4a" parent="$(arg prefix)rgbd_tower_link" prefix_topic="side_upper_kinect4a" wfov="true">
            <origin xyz="-0.08 0 0.0" rpy="0 ${10.0*PI/180.0} ${112.0*PI/180.0}"/>
        </xacro:sensor_kinect4a>

        <!-- Kinect for Azure looking sideways, lower sensor (WFOV mode) -->
        <xacro:sensor_kinect4a prefix="$(arg prefix)side_lower_kinect4a" parent="$(arg prefix)rgbd_tower_link" prefix_topic="side_lower_kinect4a" wfov="true">
            <origin xyz="-0.08 0 -0.3" rpy="0 ${30.0*PI/180.0} ${112.0*PI/180.0}"/>
        </xacro:sensor_kinect4a>

        <!-- TODO: The following lines were included in the original Robotnik config, and are probably obsolete. -->
        <!--xacro:sensor_axis_m5013 prefix="$(arg prefix)front_ptz_camera" parent="$(arg prefix)base_link">
            <origin xyz="${front_ptz_camera_offset_x} ${front_ptz_camera_offset_y} ${front_ptz_camera_offset_z}" rpy="${-PI/2} 0 0"/>
        </xacro:sensor_axis_m5013-->

        <!--xacro:sensor_axis_m5013 prefix="$(arg prefix)rear_ptz_camera" parent="$(arg prefix)base_link">
            <origin xyz="${rear_ptz_camera_offset_x} ${rear_ptz_camera_offset_y} ${rear_ptz_camera_offset_z}" rpy="${-PI/2} 0 ${PI}"/>
        </xacro:sensor_axis_m5013-->
        
        <!--xacro:sensor_orbbec_astra prefix="$(arg prefix)front_rgbd_camera" parent="$(arg prefix)base_link" prefix_topic="front_rgbd_camera">
            <origin xyz="${front_rgbd_camera_offset_x} ${front_rgbd_camera_offset_y} ${front_rgbd_camera_offset_z}" rpy="0 0 0"/>
        </xacro:sensor_orbbec_astra-->

        <!-- ARM AND CONTROLLER -->

        <!-- Panda Controller: attach to level 0 platform -->
        <xacro:darko_panda_controller prefix="$(arg prefix)panda_controller" parent="$(arg prefix)platform_0_link">
            <origin xyz="0 0 0.0" rpy="0 0 0" />
        </xacro:darko_panda_controller>

        <!-- Add Franka arm from panda_simulation -->
        <joint name="$(arg prefix)panda_mount_joint" type="fixed">
            <origin xyz="-0.23 0 0.0" rpy="0 0 ${PI}" />
            <parent link="$(arg prefix)platform_2_link"/>
            <child link="$(arg prefix)panda_mount_link" />
        </joint>
        <link name="$(arg prefix)panda_mount_link"/>
        
        <xacro:if value="$(arg enable_arm)">
            <xacro:darko_panda_arm load_gazebo="true" connected_to="$(arg prefix)panda_mount_link" load_gripper="true" use_gazebo_control="true"/>
        </xacro:if>

        <!-- NAO AND PROJECTOR -->

        <xacro:darko_nao_robot prefix="$(arg prefix)nao" parent="$(arg prefix)platform_2_link" sitting="true">
            <origin xyz="0.43 0 0.01" rpy="0 0 0" />
        </xacro:darko_nao_robot>

        <xacro:darko_projector prefix="$(arg prefix)projector" parent="$(arg prefix)platform_1_link">
            <origin xyz="0.38 0 -0.17" rpy="0 1.571 0" />
        </xacro:darko_projector>

        <!-- COMPUTERS AND WIRELESS E-STOP -->

        <xacro:darko_wireless_estop_receiver prefix="$(arg prefix)wireless_estop_receiver" parent="$(arg prefix)platform_1_link">
            <origin xyz="-0.2 0.17 0" rpy="0 0 1.571" />
        </xacro:darko_wireless_estop_receiver>

        <xacro:darko_mini_gaming_pc prefix="$(arg prefix)mini_gaming_pc" parent="$(arg prefix)platform_1_link">
            <origin xyz="0.2 0.14 0" rpy="0 0 0" />
        </xacro:darko_mini_gaming_pc>

        <xacro:darko_xavier_agx_dk prefix="$(arg prefix)xavier_agx" parent="$(arg prefix)platform_1_link">
            <origin xyz="0.2 -0.15 0" rpy="0 0 0" />
        </xacro:darko_xavier_agx_dk>

    </xacro:macro>

    <!-- Disabled because Panda simulator introduces its own, extended version of ros_control -->
    <!-- <xacro:ros_control/> -->

    <xacro:if value="$(arg ros_planar_move_plugin)">
        <xacro:omni_steering prefix="$(arg prefix)" publish_tf="true"/>
    </xacro:if>

    <xacro:summit_xl prefix="$(arg prefix)" publish_bf="true" hq="true"/>


</robot>
